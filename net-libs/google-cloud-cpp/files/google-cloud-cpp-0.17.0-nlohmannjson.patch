--- a/cmake/IncludeNlohmannJson.cmake
+++ b/cmake/IncludeNlohmannJson.cmake
@@ -15,26 +15,11 @@
 # ~~~
 
 include(ExternalProject)
-ExternalProject_Add(
-    nlohmann_json_project
-    PREFIX "${CMAKE_BINARY_DIR}/external/nlohmann_json"
-    DOWNLOAD_COMMAND ${CMAKE_COMMAND} -DDEST=<INSTALL_DIR>/src -P
-                     ${PROJECT_SOURCE_DIR}/cmake/DownloadNlohmannJson.cmake
-    CONFIGURE_COMMAND
-        "" # This is not great, we abuse the `build` step to create the target
-           # directory. Unfortunately there is no way to specify two commands in
-           # the install step.
-    BUILD_COMMAND ${CMAKE_COMMAND} -E make_directory <INSTALL_DIR>/include
-    INSTALL_COMMAND
-        ${CMAKE_COMMAND} -E copy <INSTALL_DIR>/src/json.hpp
-        <INSTALL_DIR>/include/google/cloud/storage/internal/nlohmann_json.hpp
-    LOG_DOWNLOAD ON
-    LOG_INSTALL ON)
 
 add_library(nlohmann_json INTERFACE)
 add_dependencies(nlohmann_json nlohmann_json_project)
 target_include_directories(
     nlohmann_json
     INTERFACE
-        $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/external/nlohmann_json/include>
+        $<BUILD_INTERFACE:/usr/nlohmann_json/include>
         $<INSTALL_INTERFACE:include>)
--- a/google/cloud/storage/CMakeLists.txt
+++ b/google/cloud/storage/CMakeLists.txt
@@ -461,10 +461,6 @@
             COMPONENT google_cloud_cpp_development)
 
 google_cloud_cpp_install_headers(storage_client include/google/cloud/storage)
-install(
-    FILES
-        ${CMAKE_BINARY_DIR}/external/nlohmann_json/include/google/cloud/storage/internal/nlohmann_json.hpp
-    DESTINATION include/google/cloud/storage/internal)
 
 # Setup global variables used in the following *.in files.
 set(GOOGLE_CLOUD_CPP_CONFIG_VERSION_MAJOR ${STORAGE_CLIENT_VERSION_MAJOR})
